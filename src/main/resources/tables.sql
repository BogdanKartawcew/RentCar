use rentcar_base;

CREATE TABLE AVAILABILITY
(
  AVAILABILITYID BIGINT AUTO_INCREMENT
    PRIMARY KEY,
  CARID          BIGINT NOT NULL,
  STARTDATE      DATE   NULL,
  STARTTIME      TIME   NULL,
  ENDDATE        DATE   NULL,
  ENDTIME        TIME   NULL
);


CREATE TABLE CAR
(
  CARID       BIGINT AUTO_INCREMENT,
  BRAND       VARCHAR(30)                  NOT NULL,
  MODEL       VARCHAR(30)                  NOT NULL,
  FUEL        VARCHAR(20) DEFAULT 'PETROL' NOT NULL,
  GEAR_TYPE   VARCHAR(20)                  NOT NULL,
  HORSE_POWER INT                          NOT NULL,
  BODY_TYPE   VARCHAR(40)                  NOT NULL,
  DOORS_NUM   INT                          NOT NULL,
  SEATS_NUM   INT                          NOT NULL,
  AIR_COND    TINYINT(1)  DEFAULT 0        NULL,
  NAVIGATION  TINYINT(1)  DEFAULT 0        NULL,
  VIN         VARCHAR(50)                  NOT NULL,
  REG_NUM     VARCHAR(10)                  NULL,
  YEAR        INT(4)                       NULL,
  MILEAGE     INT         DEFAULT 0        NOT NULL,
  VERSION     VARCHAR(10)                  NULL,
  PRIMARY KEY (CARID, VIN),
  CONSTRAINT CAR_MAIN_INFO_REG_NUM_UINDEX
  UNIQUE (REG_NUM),
  CONSTRAINT VIN
  UNIQUE (VIN)
);

CREATE TABLE CAR_IMAGE
(
  VIN       VARCHAR(50) NOT NULL,
  CAR_IMAGE LONGBLOB    NULL,
  CONSTRAINT CAR_IMAGE_VIN_UINDEX
  UNIQUE (VIN)
);

ALTER TABLE CAR_IMAGE
  ADD PRIMARY KEY (VIN);


CREATE TABLE CLIENT
(
  CLIENTID          BIGINT AUTO_INCREMENT,
  PESEL             VARCHAR(11) NOT NULL,
  CLIENT_FIRST_NAME VARCHAR(30) NOT NULL,
  CLIENT_LAST_NAME  VARCHAR(30) NOT NULL,
  CLIENT_EMAIL      VARCHAR(50) NOT NULL,
  CLIENT_COMP_NAME  VARCHAR(40) NOT NULL,
  CLIENT_GENDER     VARCHAR(1)  NOT NULL,
  PRIMARY KEY (CLIENTID, PESEL),
  CONSTRAINT PESEL
  UNIQUE (PESEL)
);


CREATE TABLE HISTORY
(
  ID            BIGINT AUTO_INCREMENT,
  STATUS        VARCHAR(3)                          NOT NULL,
  RESERVATIONID BIGINT                              NOT NULL,
  CARID         BIGINT                              NOT NULL,
  CLIENTID      BIGINT                              NOT NULL,
  STARTDATE     DATE                                NOT NULL,
  STARTTIME     TIME                                NOT NULL,
  ENDDATE       DATE                                NOT NULL,
  ENDTIME       TIME                                NOT NULL,
  MILEAGE       INT(6)                              NOT NULL,
  FREETEXT      VARCHAR(300)                        NULL,
  USERID        BIGINT                              NULL,
  TIMESTAMP     TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL ON UPDATE CURRENT_TIMESTAMP,
  CONSTRAINT RECEIVED_RESERVATIONS_ID_UINDEX
  UNIQUE (ID)
);

ALTER TABLE HISTORY
  ADD PRIMARY KEY (ID);

CREATE TABLE PERSISTENT_LOGINS
(
  USERNAME  VARCHAR(64)                         NOT NULL,
  SERIES    VARCHAR(64)                         NOT NULL
    PRIMARY KEY,
  TOKEN     VARCHAR(64)                         NOT NULL,
  LAST_USED TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL ON UPDATE CURRENT_TIMESTAMP
);

CREATE TABLE RECEIVED_RESERVATIONS
(
  RESERVATIONID BIGINT AUTO_INCREMENT,
  CLIENTID      BIGINT                   NOT NULL,
  CARID         BIGINT                   NOT NULL,
  STARTDATE     DATE                     NOT NULL,
  STARTTIME     TIME                     NOT NULL,
  ENDDATE       DATE                     NOT NULL,
  ENDTIME       TIME                     NOT NULL,
  STATUS        VARCHAR(3) DEFAULT '000' NOT NULL,
  CONFIRMED     TINYINT(1) DEFAULT 0     NOT NULL,
  ACTIVE        TINYINT(1) DEFAULT 0     NOT NULL,
  FINISHED      TINYINT(1) DEFAULT 0     NULL,
  CONSTRAINT RECEIVED_RESERVATIONS_RESERVATIONID_UINDEX
  UNIQUE (RESERVATIONID)
);

CREATE INDEX RECEIVED_RESERVATIONS_TIMESTAMP
  ON RECEIVED_RESERVATIONS (ENDDATE, ENDTIME);

ALTER TABLE RECEIVED_RESERVATIONS
  ADD PRIMARY KEY (RESERVATIONID);

CREATE TABLE RESERVATION_STATUS
(
  STATUS_ID   VARCHAR(3)  NOT NULL,
  STATUS_DESC VARCHAR(50) NULL,
  CONSTRAINT RESERVATION_STATUS_STATUS_ID_UINDEX
  UNIQUE (STATUS_ID)
);

ALTER TABLE RESERVATION_STATUS
  ADD PRIMARY KEY (STATUS_ID);

CREATE TABLE ROLE
(
  ID   BIGINT AUTO_INCREMENT
    PRIMARY KEY,
  TYPE VARCHAR(30) NOT NULL,
  CONSTRAINT TYPE
  UNIQUE (TYPE)
);

CREATE TABLE USER
(
  ID         BIGINT AUTO_INCREMENT
    PRIMARY KEY,
  USER_ID    VARCHAR(30)  NOT NULL,
  PASSWORD   VARCHAR(100) NOT NULL,
  FIRST_NAME VARCHAR(30)  NOT NULL,
  LAST_NAME  VARCHAR(30)  NOT NULL,
  EMAIL      VARCHAR(30)  NOT NULL,
  SEX        VARCHAR(1)   NOT NULL,
  CONSTRAINT USER_ID
  UNIQUE (USER_ID)
);

CREATE TABLE USER_IMAGE
(
  ID         BIGINT   NOT NULL,
  USER_IMAGE LONGBLOB NULL,
  CONSTRAINT USER_IMAGE_USER_ID_UINDEX
  UNIQUE (ID)
);

ALTER TABLE USER_IMAGE
  ADD PRIMARY KEY (ID);

CREATE TABLE USER_ROLE
(
  USER_ID BIGINT NOT NULL,
  ROLE_ID BIGINT NOT NULL,
  PRIMARY KEY (USER_ID, ROLE_ID),
  CONSTRAINT FK_ROLE
  FOREIGN KEY (ROLE_ID) REFERENCES ROLE (ID),
  CONSTRAINT FK_USER
  FOREIGN KEY (USER_ID) REFERENCES USER (ID)
);

